(ns virtual-keyboard.keyboard-key
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   [virtual-keyboard.keyboard-action :as keyboard-action]
   [virtual-keyboard.utils :as utils]
   [virtual-keyboard.keyboard-overlay :as keyboard-overlay]
   [cljd.flutter :as f]))

(declare
 insert-overlay
 remove-overlay)

(defn key-widget [virtual-key items-count rows-count custom-fns]
  (f/widget
   :context ctx
   :get {:value-of [:info :state]}
   :let [^m/OverlayState overlay (.of m/Overlay ctx)]
   (m/Expanded)
   .child
   (m/Padding
    .padding
    (.symmetric
     m/EdgeInsets
     .horizontal
     (:keyboard/horizontal-key-padding info)
     .vertical 0))
   .child
   (m/Container
    .clipBehavior (.hardEdge m/Clip)
    .height (/ (:keyboard/height info) rows-count)
    .decoration (m/BoxDecoration
                 .borderRadius
                 (.all m/BorderRadius
                       (.circular m/Radius (:keyboard/key-cap-border-radius info)))))
   .child
   (m/Material .color (:keyboard/key-container-color info))
   .child
   (m/InkWell
    .splashColor (-> m.Colors/black (.withOpacity 0.1))
    .highlightColor (-> m.Colors/grey .-shade200 (.withOpacity 0.3))
    .onTap
    (fn []
      (keyboard-action/on-key-press virtual-key state custom-fns))
    .onTapDown (fn [_]
                 (keyboard-overlay/insert-overlay-bubble state ctx info virtual-key))
    .onTapUp (fn [_]
               (keyboard-overlay/remove-overlay state))
    .onTapCancel (fn []
                   (keyboard-overlay/remove-overlay state)))

   .child
   (m/LongPressDraggable
    .delay (Duration .milliseconds 300)
    .dragAnchorStrategy (fn [_ _ _] (m/Offset 10 10))
    .data (:text virtual-key)
    .onDragStarted
    (fn []
      (keyboard-overlay/insert-overlay-popup state ctx info virtual-key))
    .onDragEnd
    (fn [_]
      (keyboard-overlay/remove-overlay state))
    .onDraggableCanceled
    (fn [_ _]
      ;; improve drag canceled action
      (keyboard-overlay/remove-overlay state))
    .feedback
    (m/Card
     .elevation 12
     .child
     (m/Container
      .width 10
      .height 10
      .decoration
      (m/BoxDecoration
       .color (.white70 m/Colors)
       .shape (.circle m/BoxShape)))))
   .child
   (m/Stack
    .children
    [(if (and (zero? (:keyboard/layout-index @state))
              (not (some #{(:id virtual-key)} ["ng" "-" "_"]))
              (not-empty (:id virtual-key)))
       (m/Align .alignment m.Alignment/topLeft
                .child (m/Text (:id virtual-key)))
       (m/SizedBox))
     (m/Align .alignment (.center m/Alignment)
              .child
              (if (:is-rotated virtual-key)
                (mgl/MongolText (utils/key-text state virtual-key)
                                .style
                                (m/TextStyle .fontSize (:keyboard/font-size info)
                                             .color (:keyboard/key-text-color info)
                                             .fontFamily (:keyboard/mongol-font-family info)
                                             .fontWeight (:keyboard/font-weight info)))
                (m/Text (utils/key-text state virtual-key)
                        .style
                        (m/TextStyle .fontSize (:keyboard/font-size info)
                                     .color (:keyboard/key-text-color info)
                                     .fontFamily (:keyboard/english-font-family info)
                                     .fontWeight (:keyboard/font-weight info)))))])))
