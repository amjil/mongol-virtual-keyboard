(ns virtual-keyboard.keyboard
  (:require
   ["package:flutter/material.dart" :as m]
   [cljd.flutter :as f]
   [virtual-keyboard.keyboard-builder :as builder]
   [virtual-keyboard.keyboard-layouts :as layouts]
   [virtual-keyboard.options :as options]))

(declare keyboard-rows
         keyboard-row-keys)

(defn keyboard [{:keys [custom-fns]}]
  (f/widget
   :get {:value-of [:state]}
   :let [mg-keys (builder/keyboard-layout-builder layouts/mg-layout custom-fns)
         en-keys (builder/keyboard-layout-builder layouts/en-layout custom-fns)
         en-special-keys (builder/keyboard-layout-builder layouts/en-special-layout custom-fns)
         en-other-special-keys (builder/keyboard-layout-builder layouts/en-other-special-layout custom-fns)
         mg-special-keys (builder/keyboard-layout-builder layouts/mg-special-layout custom-fns)
         mg-other-special-keys (builder/keyboard-layout-builder layouts/mg-other-special-layout custom-fns)]
   :watch [{layout-index :keyboard/layout-index
            is-special-enabled :keyboard/is-special-enabled
            is-other-special-enabled :keyboard/is-other-special-enabled}
           state]
   (keyboard-rows
    (condp = layout-index
      0 (condp = is-special-enabled
             true (condp = is-other-special-enabled
                    true mg-other-special-keys
                    mg-special-keys)
             false mg-keys)
      1 (condp = is-special-enabled
             true (condp = is-other-special-enabled
                    true en-other-special-keys
                    en-special-keys)
             false en-keys)))))

(defn keyboard-rows [rows]
  (f/widget
   :context ctx
   :get {:value-of [:info]}
   (let [width (-> m/MediaQuery (.of ctx) .-size .-width)]
     (m/Container
      .height (+ options/keyboard-default-height (* (count rows) (+ 4 (or (:keyboard/row-vertical-padding info) 4))))
      .width width
      .child (m/Column
              .mainAxisAlignment (.center m/MainAxisAlignment)
              .crossAxisAlignment (.center m/CrossAxisAlignment)
              .children (keyboard-row-keys info rows))))))

(defn keyboard-row-keys [info items]
  (doall
   (map
    (fn [x]
      (f/widget
       (m/Material
        .color m.Colors/transparent)
       .child
       (m/Padding
        .padding
        (.symmetric
         m/EdgeInsets
         .vertical (:keyboard/row-vertical-padding info)
         .horizontal 1))
       .child
       (m/Row
        .mainAxisAlignment (.spaceAround m/MainAxisAlignment)
        .crossAxisAlignment (.center m/CrossAxisAlignment)
        .children x)))

    items)))